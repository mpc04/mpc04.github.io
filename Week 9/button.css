 @import url('https://fonts.googleapis.com/css2?family=Slackey&family=Inter:wght@400;600&display=swap');

        :root {
            --hueStep: 90;
            --delayStep: 0.115s;
            --hue: 0;
        }

        .btn {
            background: hsl(var(--hue), 98%, 80%);
            border: none;
            border-radius: 9999px; 
            cursor: pointer;
            color: black;
            font-family: "Slackey", cursive; 
            font-weight: 400;
            font-size: 1.05rem;
            line-height: 1;
            letter-spacing: .05em;
            overflow: hidden;
            padding: 1.15em 3.5em;
            min-height: 3.3em;
            position: relative;
            text-transform: uppercase;
            display: inline-block;
            transition: all 0.2s ease;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        .btn--green { 
            background-color: #95B46A; 
            --greenBase: #95B46A;
            --greenMidLight: #709255;
            --greenMidDark: #3E5622;
            --greenDarkest: #172815;
            color: #000; 
        }

        .btn--green:hover .btn__txt,
        .btn--green:focus .btn__txt,
        .btn--green:active .btn__txt {
            color: #FFFFFF;
            transition: color 0.3s ease 0.4s;
        }

    
        .btn:active, 
        .btn:focus {
            outline: 3px solid hsl(calc(var(--hue) + var(--hueStep)), 98%, 80%);
            outline-offset: 4px;
        }
        .btn--green:active,
        .btn--green:focus {
            outline: 3px solid #3E5622; 
        }

        .btn + .btn {
            margin-top: 2.5em;
        }

        .btn__txt {
            position: relative;
            z-index: 6;
            transition: color 0.2s ease;
        }

      
        .btn__bg {
            background: hsl(var(--hueBg), 98%, 80%); 
            border-radius: 50%;
            display: block;
            height: 0;
            left: 50%;
            margin: -50% 0 0 -50%;
            padding-top: 100%;
            position: absolute;
            top: 50%;
            width: 100%;
            transform: scale(0);
            transform-origin: 50% 50%;
            transition: transform 0.175s cubic-bezier(0.5, 1, 0.89, 1); 
            pointer-events: none; 
        }
        

        /* Layer 1 */
        .btn--green .btn__bg:nth-of-type(1) {
            background-color: var(--greenBase); 
            transition-delay: calc(var(--delayStep) / 2 * 3);
            z-index: 2;
        }
        /* Layer 2 */
        .btn--green .btn__bg:nth-of-type(2) {
            background-color: var(--greenMidLight); 
            transition-delay: calc(var(--delayStep) / 2 * 2);
            z-index: 3;
        }
        /* Layer 3 */
        .btn--green .btn__bg:nth-of-type(3) {
            background-color: var(--greenMidDark); 
            transition-delay: calc(var(--delayStep) / 2 * 1);
            z-index: 4;
        }
        /* Layer 4 */
        .btn--green .btn__bg:nth-of-type(4) {
            background-color: var(--greenDarkest); 
            transition-delay: calc(var(--delayStep) / 2 * 0);
            z-index: 5;
        }


        .btn:hover .btn__bg,
        .btn:focus .btn__bg,
        .btn:active .btn__bg {
            transform: scale(1.5);
            transition: transform 0.35s cubic-bezier(0.11, 0, 0.5, 0);
        }

        
        .btn:hover .btn__bg:nth-of-type(1), .btn:focus .btn__bg:nth-of-type(1), .btn:active .btn__bg:nth-of-type(1) {
            transition-delay: calc(var(--delayStep) * 1);
        }
        .btn:hover .btn__bg:nth-of-type(2), .btn:focus .btn__bg:nth-of-type(2), .btn:active .btn__bg:nth-of-type(2) {
            transition-delay: calc(var(--delayStep) * 2);
        }
        .btn:hover .btn__bg:nth-of-type(3), .btn:focus .btn__bg:nth-of-type(3), .btn:active .btn__bg:nth-of-type(3) {
            transition-delay: calc(var(--delayStep) * 3);
        }
        .btn:hover .btn__bg:nth-of-type(4), .btn:focus .btn__bg:nth-of-type(4), .btn:active .btn__bg:nth-of-type(4) {
            transition-delay: calc(var(--delayStep) * 4);
        }
        
/*I based this code off of an idea I found on codepen https://codepen.io/natszafraniec/pen/abYNbaJ*/